{"version":3,"sources":["scripts/main.js"],"names":["listNode","document","querySelector","sortList","list","listItems","children","sort","empl1","empl2","salary1","parseSalary","dataset","salary","salary2","append","getEmployees","map","employee","fullName","innerText","position","age","name","replace"],"mappings":";AAAA,aAyCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAtCA,IAAMA,EAAWC,SAASC,cAAc,MAElCC,EAAW,SAAAC,GAETC,IAAAA,EAAgBD,EAAAA,EAAKE,UAG3BD,EAAUE,KAAK,SAACC,EAAOC,GACfC,IAAAA,EAAUC,EAAYH,EAAMI,QAAQC,QAGnCC,OAFSH,EAAYF,EAAMG,QAAQC,QAEzBH,IAInBN,EAAKW,OAALX,MAAAA,EAAeC,EAAAA,KAGXW,EAAe,SAAAZ,GAaZC,OAZW,EAAID,EAAKE,UAAUW,IAAI,SAAAC,GACjCC,IAAAA,EAAWD,EAASE,UACQF,EAAAA,EAASN,QAAnCS,EAAAA,EAAAA,SAAUR,EAAAA,EAAAA,OAAQS,EAAAA,EAAAA,IAEnB,MAAA,CACLC,KAAMJ,EACNE,SAAAA,EACAR,OAAQF,EAAYE,GACpBS,KAAMA,MAQNX,EAAc,SAAAE,GAAU,OAACA,EAAOW,QAAQ,QAAS,KAEvDrB,EAASH,GACTgB,EAAahB","file":"main.b5d510fd.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// we get a list of employees\nconst listNode = document.querySelector('ul');\n\nconst sortList = list => {\n  // we get all the elements of the list\n  const listItems = [...list.children];\n\n  // we sorting employees by decreasing salary\n  listItems.sort((empl1, empl2) => {\n    const salary1 = parseSalary(empl1.dataset.salary);\n    const salary2 = parseSalary(empl2.dataset.salary);\n\n    return salary2 - salary1;\n  });\n\n  // we move list items to new locations\n  list.append(...listItems);\n};\n\nconst getEmployees = list => {\n  const listItems = [...list.children].map(employee => {\n    const fullName = employee.innerText;\n    const { position, salary, age } = employee.dataset;\n\n    return {\n      name: fullName,\n      position,\n      salary: parseSalary(salary),\n      age: +age,\n    };\n  });\n\n  return listItems;\n};\n\n// we remove commas and dollar signs from wages and convert to a number\nconst parseSalary = salary => +salary.replace(/[$,]/g, '');\n\nsortList(listNode);\ngetEmployees(listNode);\n"]}